{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/subhomkundu/Documents/Projects/Next JS/github-user-search/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Card from \"../components/Card\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Home = function Home(props) {\n  var cards = props.data.map(function (item, index) {\n    return __jsx(Card, {\n      key: index,\n      username: item.login,\n      img: item.avatar_url,\n      url: item.html_url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }\n    });\n  });\n\n  var _useState = useState({}),\n      userdata = _useState[0],\n      setUserData = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var getData = function getData(event) {\n    setData(event.target.value);\n  };\n\n  var fetchData = function fetchData(data) {\n    var finalUrl, res, json;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            finalUrl = \"https://api.github.com/users/\" + data;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(finalUrl));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 7:\n            json = _context.sent;\n\n            if (res.status === 200) {\n              console.log(json);\n              setUserData(json);\n            } else if (res.status === 404) {\n              console.log(json);\n              setUserData(json);\n            }\n\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  return __jsx(Layout, {\n    title: \"Github user details:\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"using https://api.github.com/users/ & Next.js\"), __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"search-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"search\",\n    placeholder: \"type your github username\",\n    onChange: getData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return fetchData(data);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Search\")), __jsx(Card, {\n    msg: userdata.message,\n    username: userdata.login,\n    img: userdata.avatar_url,\n    url: userdata.html_url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, cards));\n};\n\nHome.getInitialProps = function _callee() {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.github.com/users\"));\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            data: json\n          });\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/subhomkundu/Documents/Projects/Next JS/github-user-search/pages/index.js"],"names":["React","useState","useEffect","Layout","Card","fetch","Home","props","cards","data","map","item","index","login","avatar_url","html_url","userdata","setUserData","setData","getData","event","target","value","fetchData","finalUrl","res","json","status","console","log","error","message","getInitialProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Card from \"../components/Card\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Home = (props) => {\n  const cards = props.data.map((item, index) => (\n    <Card\n      key={index}\n      username={item.login}\n      img={item.avatar_url}\n      url={item.html_url}\n    />\n  ));\n  const [userdata, setUserData] = useState({});\n  const [data, setData] = useState(\"\");\n\n  const getData = (event) => {\n    setData(event.target.value);\n  };\n  const fetchData = async (data) => {\n    try {\n      const finalUrl = \"https://api.github.com/users/\" + data;\n      const res = await fetch(finalUrl);\n      const json = await res.json();\n      if (res.status === 200) {\n        console.log(json);\n        setUserData(json);\n      } else if (res.status === 404) {\n        console.log(json);\n        setUserData(json);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <Layout title=\"Github user details:\">\n      <p>using https://api.github.com/users/ & Next.js</p>\n      <div className=\"row\">\n        <div className=\"search-wrapper\">\n          <input\n            type=\"search\"\n            placeholder=\"type your github username\"\n            onChange={getData}\n          />\n          <button onClick={() => fetchData(data)}>Search</button>\n        </div>\n\n        <Card\n          msg={userdata.message}\n          username={userdata.login}\n          img={userdata.avatar_url}\n          url={userdata.html_url}\n        />\n      </div>\n      <div className=\"container\">{cards}</div>\n    </Layout>\n  );\n};\n\nHome.getInitialProps = async () => {\n  const res = await fetch(\"https://api.github.com/users\");\n  const json = await res.json();\n  return {\n    data: json,\n  };\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}